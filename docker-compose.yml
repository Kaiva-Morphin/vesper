services:
  # yugabyte:
  #   env_file:
  #     - ".cfg"
  #     - ".env"
  #   image: yugabytedb/yugabyte:latest
  #   restart: always
  #   ports:
  #     - "${DATABASE_PORT}:5433"  # YCQL/YCQL port
  #     - "15433:15433"                  # Web UI (optional)
  #   command: "/home/yugabyte/bin/yugabyted start --daemon=false --tserver_flags=enable_ysql=true --master_flags=ysql_enable_auth=true"
  #   volumes:
  #     # - yb_data:/home/yugabyte/yb_data
  #     - yb_data:/root/var/data
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:15433"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  rustperms_master:
    build:
      context: .
      dockerfile: services/rustperms_nodes/Dockerfile.master
    env_file:
      - ".env"
    ports:
      - "${RUSTPERMS_MASTER_PORT}:${RUSTPERMS_MASTER_PORT}"
    depends_on:
      - postgre
      - nats
    restart: always
  
  rustperms_replica:
    build:
      context: .
      dockerfile: services/rustperms_nodes/Dockerfile.replica
    env_file:
      - ".env"
    ports:
      - "${RUSTPERMS_REPLICA_PORT}:${RUSTPERMS_REPLICA_PORT}"
    depends_on:
      - postgre
      - nats
      - rustperms_master
    restart: always

  dragonfly:
    env_file:
      - ".cfg"
      - ".env"
    image: docker.dragonflydb.io/dragonflydb/dragonfly
    restart: always
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - ./dbs/dragonfly:/data
    command: --snapshot_cron="*/5 * * * *"

  postgre:
    env_file: 
      - ".cfg"
      - ".env"
    image: postgres:17.4-alpine3.21
    restart: always
    ports:
      - "${DATABASE_PORT}:5432"
    volumes:
      - ./dbs/init_postgre.sql:/docker-entrypoint-initdb.d/init.sql
      - ./dbs/postgre-data:/var/lib/postgresql/data
    
  # redis:
  #   env_file:
  #     - ".cfg"
  #     - ".env"
  #   image: redis:7.2.4-alpine
  #   restart: always
  #   ports:
  #     - "${REDIS_PORT}:6379"
  #   command: redis-server --save 20 1 --loglevel warning
  #   volumes:
  #     - ./dbs/redis:/data

  nats:
    env_file:
      - ".cfg"
      - ".env"
    image: nats:latest
    container_name: nats_server
    ports:
      - "${NATS_PORT}:4222"
      - "${NATS_MONITOR_PORT}:8222"
    command: ["-js"] # todo: add storage?
  
  redisinsight:
    image: redis/redisinsight:latest
    container_name: redisinsight
    ports:
      - "5540:5540"
    volumes:
      - redisinsight-data:/root/.redisinsight
    restart: always
  
  minio:
    image: minio/minio # image: minio/minio:RELEASE.2025-04-03T14-56-28Z-cpuv1 # FOR LOW-END CPUs
    restart: always
    env_file:
      - ".cfg"
      - ".env"
    environment:
      MINIO_HOST: "http://minio:9000"
    entrypoint: ["/bin/sh", "/data/init.sh"]
    ports:
      - "9000:9000"
    volumes:
      - ./dbs/minio:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://minio:9000/minio/health/live"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s
  
volumes:
  redisinsight-data:
  # yb_data:
  #   driver: local
  redis:
    driver: local