//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.4

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "user_data")]
pub struct Model {
    pub allow_suspicious_refresh: bool,
    pub last_login_change: Option<DateTime>,
    pub warn_suspicious_refresh: bool,
    pub perm_container: Uuid,
    #[sea_orm(unique)]
    pub email: String,
    #[sea_orm(unique)]
    pub login: String,
    pub updated_at: DateTime,
    #[sea_orm(primary_key, auto_increment = false)]
    pub uuid: Uuid,
    pub password: String,
    #[sea_orm(unique)]
    pub google_id: Option<String>,
    pub nickname: String,
    #[sea_orm(unique)]
    pub discord_id: Option<String>,
    pub created_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::perm_container::Entity",
        from = "Column::PermContainer",
        to = "super::perm_container::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    PermContainer,
}

impl Related<super::perm_container::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PermContainer.def()
    }
}

