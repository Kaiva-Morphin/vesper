//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.4

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "post")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub guid: Uuid,
    #[sea_orm(unique)]
    pub user_guid: Uuid,
    pub content: Option<String>,
    pub attachments: Option<Vec<String>>,
    pub created_at: DateTime,
    pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::user_data::Entity",
        from = "Column::UserGuid",
        to = "super::user_data::Column::Guid",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    UserData,
}

impl Related<super::user_data::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserData.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
